{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "portable",
            "type": "shell",
            "command": "./portable.sh"
        },
        {
            "label": "wsl portable",
            "type": "shell",
            "command": "wsl ./portable.sh"
        },
        {
            "label": "choco install -y",
            "type": "shell",
            "command": "elevation.cmd",
            "args": [
                "choco",
                "install",
                "-y",
                "${selectedText}"
            ],
            "options": {
                "cwd": "${workspaceFolder}\\scripts"
            }
        },
        {
            "label": "choco install",
            "type": "shell",
            "command": "elevation.cmd",
            "args": [
                "choco",
                "install",
                "${selectedText}"
            ],
            "options": {
                "cwd": "${workspaceFolder}\\scripts"
            }
        },
        {
            "label": "Open choco package in browser",
            "type": "shell",
            "command": "explorer",
            "args": [
                "\"https://chocolatey.org/packages/${selectedText}\""
            ]
        },
        {
            "label": "choco info",
            "type": "shell",
            "command": "choco",
            "args": [
                "info",
                "${selectedText}"
            ]
        },
        {
            "label": "code --install-extension",
            "type": "shell",
            "command": "code",
            "args": [
                "--install-extension",
                "${selectedText}"
            ]
        },
        {
            "label": "code --install-extension(multiple)",
            "type": "shell",
            "command": "echo",
            "args": [
                "'${command:extension.commandvariable.selectedText}'",
                "|",
                "tr",
                "'\n'",
                "' '",
                "|",
                "xargs",
                "-n1",
                "code",
                "--install-extension"
            ],
            "problemMatcher": []
        },
        {
            "label": "code --list-extensions",
            "type": "shell",
            "command": "code",
            "args": [
                "--list-extensions"
            ]
        },
        {
            "label": "Open VS Code extension in browser",
            "type": "shell",
            "command": "explorer",
            "args": [
                "\"https://marketplace.visualstudio.com/items?itemName=${selectedText}\""
            ]
        },
        {
            "label": "npm install --global",
            "type": "shell",
            "command": "npm",
            "args": [
                "install",
                "--global",
                "${selectedText}"
            ]
        },
        {
            "label": "Open NPM package in browser",
            "type": "shell",
            "command": "explorer",
            "args": [
                "\"https://www.npmjs.com/package/${selectedText}\""
            ]
        },
        {
            "label": "ansible-playbook",
            "type": "shell",
            "command": "ansible-playbook",
            "args": [
                "-i",
                ".",
                "${file}",
                "\"$( if [ ! -z ${command:extension.commandvariable.selectedText} ]; then echo --tags; else echo '-v'; fi )\"",
                "${command:extension.commandvariable.selectedText}"
            ],
            "options": {
                "cwd": "${workspaceFolder}/inventory"
            },
            "problemMatcher": []
        },
        {
            "label": "ansible-playbook -vvv",
            "type": "shell",
            "command": "ansible-playbook",
            "args": [
                "-i",
                ".",
                "${file}",
                "\"$( if [ ! -z ${command:extension.commandvariable.selectedText} ]; then echo --tags; else echo '-v'; fi )\"",
                "${command:extension.commandvariable.selectedText}",
                "-vvv"
            ],
            "options": {
                "cwd": "${workspaceFolder}/inventory"
            },
            "problemMatcher": []
        },
        {
            "label": "ansible-lint",
            "type": "shell",
            "command": "ansible-lint",
            "args": [
                "${file}"
            ],
            "problemMatcher": []
        },
        {
            "label": "echo multi selection",
            "type": "shell",
            "command": "echo",
            "args": [
                "'${command:extension.commandvariable.selectedText}'",
                "|",
                "tr",
                "'\n'",
                "' '"
            ],
            "problemMatcher": []
        },
        {
            "label": "ansible-vault edit",
            "type": "shell",
            "command": "ansible-vault",
            "args": [
                "edit",
                "${file}",
                "--ask-vault-pass"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        }
    ]
}